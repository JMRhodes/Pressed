/* Grid System
----------------------------------------------- */

// Set the container width, and override it for fixed navbars in media queries
.container {
    @include container-fixed();
}

// mobile first defaults
.row {
    @include make-row();
}

// Common styles for small and large grid columns
.col-xs-1,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-6,
.col-xs-7,
.col-xs-8,
.col-xs-9,
.col-xs-10,
.col-xs-11,
.col-xs-12,
.col-sm-1,
.col-sm-2,
.col-sm-3,
.col-sm-4,
.col-sm-5,
.col-sm-6,
.col-sm-7,
.col-sm-8,
.col-sm-9,
.col-sm-10,
.col-sm-11,
.col-sm-12,
.col-md-1,
.col-md-2,
.col-md-3,
.col-md-4,
.col-md-5,
.col-md-6,
.col-md-7,
.col-md-8,
.col-md-9,
.col-md-10,
.col-md-11,
.col-md-12,
.col-lg-1,
.col-lg-2,
.col-lg-3,
.col-lg-4,
.col-lg-5,
.col-lg-6,
.col-lg-7,
.col-lg-8,
.col-lg-9,
.col-lg-10,
.col-lg-11,
.col-lg-12 {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left: ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
}

/* Extra small grid
----------------------------------------------- */

.col-xs-1,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-6,
.col-xs-7,
.col-xs-8,
.col-xs-9,
.col-xs-10,
.col-xs-11 {
    float: left;
}

// col-xs classes
@for $i from 1 through 11 {
    .col-xs-#{$i} {
        width: percentage(($i / $grid-columns));
    }
}

.col-xs-12 {
    width: 100%;
}

/* Small grid
----------------------------------------------- */

@media (min-width: $screen-tablet) {
    .container {
        max-width: $container-tablet;
    }

    .col-sm-1,
    .col-sm-2,
    .col-sm-3,
    .col-sm-4,
    .col-sm-5,
    .col-sm-6,
    .col-sm-7,
    .col-sm-8,
    .col-sm-9,
    .col-sm-10,
    .col-sm-11 {
        float: left;
    }

    // col-sm classes
    @for $i from 1 through 11 {
        .col-sm-#{$i} {
            width: percentage(($i / $grid-columns));
        }
    }
    .col-sm-12 {
        width: 100%;
    }

    // Push and pull columns for source order changes
    @for $i from 1 through 11 {
        .col-sm-push-#{$i} {
            left: percentage(($i / $grid-columns));
        }
    }

    @for $i from 1 through 11 {
        .col-sm-pull-#{$i} {
            right: percentage(($i / $grid-columns));
        }
    }

    // Offsets
    @for $i from 1 through 11 {
        .col-sm-offset-#{$i} {
            margin-left: percentage(($i / $grid-columns));
        }
    }
}

/* Medium grid
----------------------------------------------- */

@media (min-width: $screen-desktop) {
    .container {
        max-width: $container-desktop;
    }
    .col-md-1,
    .col-md-2,
    .col-md-3,
    .col-md-4,
    .col-md-5,
    .col-md-6,
    .col-md-7,
    .col-md-8,
    .col-md-9,
    .col-md-10,
    .col-md-11 {
        float: left;
    }

    // col-md classes
    @for $i from 1 through 11 {
        .col-md-#{$i} {
            width: percentage(($i / $grid-columns));
        }
    }
    .col-md-12 {
        width: 100%;
    }

    // Push and pull columns for source order changes
    @for $i from 1 through 11 {
        .col-md-push-#{$i} {
            left: percentage(($i / $grid-columns));
        }
    }

    @for $i from 1 through 11 {
        .col-md-pull-#{$i} {
            right: percentage(($i / $grid-columns));
        }
    }

    // Offsets
    @for $i from 1 through 11 {
        .col-md-offset-#{$i} {
            margin-left: percentage(($i / $grid-columns));
        }
    }
}

/* Large grid
----------------------------------------------- */

@media (min-width: $screen-lg-desktop) {
    .container {
        max-width: $container-lg-desktop;
    }

    .col-lg-1,
    .col-lg-2,
    .col-lg-3,
    .col-lg-4,
    .col-lg-5,
    .col-lg-6,
    .col-lg-7,
    .col-lg-8,
    .col-lg-9,
    .col-lg-10,
    .col-lg-11 {
        float: left;
    }

    // col-lg classes
    @for $i from 1 through 11 {
        .col-lg-#{$i} {
            width: percentage(($i / $grid-columns));
        }
    }
    .col-lg-12 {
        width: 100%;
    }

    // Push and pull columns for source order changes
    @for $i from 1 through 11 {
        .col-lg-push-#{$i} {
            left: percentage(($i / $grid-columns));
        }
    }

    @for $i from 1 through 11 {
        .col-lg-pull-#{$i} {
            right: percentage(($i / $grid-columns));
        }
    }

    // Offsets
    @for $i from 1 through 11 {
        .col-lg-offset-#{$i} {
            margin-left: percentage(($i / $grid-columns));
        }
    }
}